ggplot(nodes, aes(x=x,y=y,color=type)) +
geom_point()
library(tidyverse)
library(dplyr)
node.csv <- "https://raw.githubusercontent.com/QuentinGoss/CAP5771-Final-Project/master/data/node.csv"
nodes.raw <- read.csv(node.csv)
head(nodes.raw)
nodes <- nodes.raw[, c('id','x','y','type')]
head(nodes)
ggplot(nodes, aes(x=x,y=y,color=type)) +
geom_point()
nodes.nopriorty <- nodes[ which(nodes$type != 'priority'),]
ggplot(nodes.nopriority, aes(x=x,y=y,color=type)) +
geom_point()
nodes.nopriority <- nodes[ which(nodes$type != 'priority'),]
ggplot(nodes.nopriority, aes(x=x,y=y,color=type)) +
geom_point()
edge.csv <- "https://raw.githubusercontent.com/QuentinGoss/CAP5771-Final-Project/master/data/edge.csv"
edges.raw <- read.csv(edge.csv)
head(edges.raw)
View(edges.raw)
summary(edges.raw)
head(edges.raw)
size(edges.raw)
nrow(edges.raw)
summary(edges.raw)
print('rows',nrow(edges.raw))
paste0('rows',nrow(edges.raw))
summary(edges.raw)
paste0('rows ',nrow(edges.raw))
summary(edges.raw)
paste0('rows: ',nrow(edges.raw))
summary(edges.raw)
View(edges.raw)
7343-269
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
head(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges.raw[which(edges.raw$name != NA),]
head(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges.raw[which(is.na(edges.raw$name)),]
head(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges.raw[which(edges.raw$name),]
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
# edges <- edges.raw[which(edges.raw$name),]
head(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
# edges <- edges.raw[which(edges.raw$name),]
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
# edges <- edges.raw[which(edges.raw$name),]
print(tail(edges))
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
# edges <- edges.raw[which(edges.raw$name),]
summary(tail(edges))
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges.raw[which(edges.raw$name == ''),]
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges.raw[which(edges.raw$name != ''),]
had(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges.raw[which(edges.raw$name != ''),]
head(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges.raw[which(edges.raw$name != ''),]
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
edges <- edges %>%
within(spreadType[spreadType == ''] <- 'right')
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
edges$spreadType[edges$spreadType %in% ''] <- 'right'
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
# edges$spreadType[edges$spreadType %in% ''] <- 'right'
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
# edges$spreadType[edges$spreadType %in% ''] <- 'right'
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
edges$spreadType[edges$spreadType %in% ''] <- 'right'
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
levels(edges$spreadType)[levels(edges$spreadType) == ''] <- 'right'
tail(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
levels(edges$spreadType)[levels(edges$spreadType) == ''] <- 'right'
head(edges)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
levels(edges$spreadType)[levels(edges$spreadType) == ''] <- 'right'
summary(edges)
summary(nodes.raw)
paste0('Rows: ',nrow(nodes.raw))
summary(nodes.raw)
ggplot(edges,aes(x = speed, y = type, color = priority)) +
geom_point()
qplot(edges,aes(x = speed, y = type, color = priority)) +
geom_point()
ggplot(edges,aes(x = speed, y = type, color = priority)) +
geom_point()
ggplot(edges) +
geom_point(aes(x=edges$speed, y=edges$type, color='red'))
ggplot(edges,aes(y=edges$type)) +
geom_point(aes(x=edges$speed, color='red')) +
geom_point(aes(x=))
ggplot(edges) +
geom_point(aes(x=edges$speed, y=edges$type, color='red')) +
# geom_point(aes(x=))
ggplot(edges aes(y=edges$type)) +
ggplot(edges, aes(y=edges$type)) +
geom_point(aes(x=edges$speed, color='red')) +
# geom_point(aes(x=))
ggplot(edges, aes(y=edges$type)) +
geom_point(aes(x=edges$speed, color='red'))# +
# geom_point(aes(x=))
ggplot(edges, aes(y=type)) +
geom_point(aes(x=speed, color='red'))# +
# geom_point(aes(x=))
ggplot(edges, aes(y=type)) +
geom_point(aes(x=speed, color='red')) +
geom_point(aes(x=priority, color='blue'))
library(cowplot)
library(cowplot)
type.vs.speed <- ggplot(edges, aes(x=speed, y=type)) + geom_point()
priority.vs.numlanes <- ggplot(edges, aes(x=priority, y=numlanes)) + geom_point()
plot_grid(type.vs.speed, priority.vs.numlanes, labels= "AUTO")
type.vs.speed <- ggplot(edges, aes(x=speed, y=type)) + geom_point()
priority.vs.numlanes <- ggplot(edges, aes(x=priority, y=numLanes)) + geom_point()
plot_grid(type.vs.speed, priority.vs.numlanes, labels= "AUTO")
library(tidyverse)
library(dplyr)
library(cowplot)
node.csv <- "https://raw.githubusercontent.com/QuentinGoss/CAP5771-Final-Project/master/data/node.csv"
nodes.raw <- read.csv(node.csv)
paste0('Rows: ',nrow(nodes.raw))
summary(nodes.raw)
edge.csv <- "https://raw.githubusercontent.com/QuentinGoss/CAP5771-Final-Project/master/data/edge.csv"
edges.raw <- read.csv(edge.csv)
# Trim the decided columns
edges <- edges.raw[,c('type','numLanes','speed','priority','spreadType','name','length')]
# Trim rows where name = NA
edges <- edges[which(edges$name != ''),]
# Change spreadType '' to 'right'
levels(edges$spreadType)[levels(edges$spreadType) == ''] <- 'right'
summary(edges)
type.vs.speed <- ggplot(edges, aes(x=speed, y=type)) + geom_point()
priority.vs.numlanes <- ggplot(edges, aes(x=priority, y=numLanes)) + geom_point()
plot_grid(type.vs.speed, priority.vs.numlanes, labels= "AUTO")
cor(edges)
edges.numeric <- edges[,c('numLanes','speed','priority','length')]
cor(edges.numeric)
library(caret)
edges.numeric <- edges[,c('numLanes','speed','priority','length')]
edges.numeric.std <- edges.numeric %>%
preProcess(method = c('center','scale')) %>%
predict(edges.numeric)
summary(edges.numeric)
edges.numeric <- edges[,c('numLanes','speed','priority','length')]
edges.numeric.std <- edges.numeric %>%
preProcess(method = c('center','scale')) %>%
predict(edges.numeric)
summary(edges.numeric.std)
cor(edges.numeric.std)
edges.numeric <- edges[,c('numLanes','speed','priority','length')]
pca.edges <- prcomp(edges.numeric, scale = TRUE)
summary(pca.edges)
pca.edges$rot
library(ggfortify)
autoplot(pca.edges, loadings.colour = 'blue', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 3)
autoplot(pca.edges, loadings.colour = 'blue', loadings = TRUE, loadings.label = TRUE, loadings.label.size = 5)
library(caret)
library(ggfortify)
edges.numeric.std <- edges.numeric %>%
perProcess(method = c('center', 'scale')) %>%
predict(edges.numeric)
edges.numeric.std <- edges.numeric %>%
preProcess(method = c('center', 'scale')) %>%
predict(edges.numeric)
summary(edges.numeric.std)
edges.numeric.std <- edges.numeric %>%
preProcess(method = c('center', 'scale')) %>%
predict(edges.numeric)
autoplot(cor(edges.numeric.std)) +
labs(x = '', y='', title = 'Correlation Plot')
edges.numeric.std <- edges.numeric %>%
preProcess(method = c('center', 'scale')) %>%
predict(edges.numeric)
autoplot(cor(edges.numeric.std)) +
labs(x = '', title = 'Correlation Plot')
edges.categorical <- edges[,c('type','spreadType','name','speed','numLanes','priority')]
edges.numeric.std <- edges.numeric %>%
preProcess(method = c('center', 'scale')) %>%
predict(edges.numeric)
autoplot(cor(edges.numeric.std)) +
labs(x = '', y = '', title = 'Correlation Plot')
